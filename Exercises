#Find highest counted word in a file
fname = input('Enter file:')
try:
    fhand = open(fname)
except:
    print('Error: File cannot be found.')
    quit()
    
counts = dict()
for line in fhand:
    words = line.split()
    for word in words:
        counts[word] = counts.get(word, 0) + 1

hicount = None
hiword = None
for word, count in counts.items():
    if hicount is None or count > hicount:
        hicount = count
        hiword = word
print(hiword, hicount)

#Count
list = [1,34,5,9,27]
count = 0
for i in list:
    count = count + 1
print('The count is:',count)

#Sum
list = [1,34,5,9,27]
sum = 0
for i in list:
    sum = sum + i
print('The sum is:',sum)

#Average
list = [0,34,5,9,27]
sum = 0
count = 0
for i in list:
    sum = sum + i
for i in list:
    count = count + 1
print(count,sum, sum/count)

# Calculate pay
xh = input('Enter hours:')
xr = input('Enter rate:')
xp = float(xh) * float(xr)
print('Pay:',xp)

#Calculate overtime pay
hours = input('Enter hours:')
rate = input('Enter rate:')
fh = float(hours)
fr = float(rate)
if fh > 40:
    print('Overtime')
    reg = fh * fr
    ot = (fh - 40) * (fr * 0.5)
    pay = reg + ot
else:
    print('Regular')
    pay = fh * fr
print('Pay:',pay)

#Calculate overtime pay. Using try and except
hours = input('Enter hours:')
rate = input('Enter rate:')
try:
    fh = float(hours)
    fr = float(rate)
except:
    print('Error, please enter a numeric input')
    quit()
if fh > 40:
    print('Overtime')
    reg = fh * fr
    ot = (fh - 40) * (fr * 0.5)
    pay = reg + ot
else:
    print('Regular')
    pay = fh * fr
print('Pay:',pay)

#Deliver letter grade based on percentage
score = input('Enter score:')
try:
    fscore = float(score)
    if fscore < 0 or fscore > 1:
        print('Error: Value not in range')
    elif fscore >= 0.9:
        print('A')
    elif fscore >= 0.8:
        print('B')
    elif fscore >= 0.7:
        print('C')
    elif fscore >= 0.6:
        print('D')
    else:
        print('F')
except:
    print('stop')
    quit()
    
#Find smallest and largest number from user input.
largest = -1
smallest = None
while True:
    num = input("Enter a number: ")
    if num == "done":
        break
    try:
        num = float(num)
    except:
        print('Invalid input')
        continue
    if num > largest:
        largest = num
    if smallest is None:
        smallest = num
    elif num < smallest:
        smallest = num
    #print(num)

print("Maximum", largest)
print("Minimum", smallest)

#Find SPAM confidence average
# Use the file name mbox-short.txt as the file name
fname = input("Enter file name: ")
fh = open(fname)
count = 0
total = 0
for line in fh:
    if not line.startswith("X-DSPAM-Confidence:"):
        continue
    st = line.find(' ')
    cc = line[st+1:]
    x = float(cc)
    count = count +1
    total = total + x
avg = total/count
print('Average spam confidence',avg)

#Append empty list
fname = input("Enter file name: ")
try:
    fh = open(fname)
except:
    print('File cannot be found.')
    quit()
lst = list()
for line in fh:
    words = line.split()
    for w in words:
        if w not in lst:
            lst.append(w)
        else:
            continue
lst.sort()
print(lst)

#Find day of email sent and count
fname = input("Enter file name: ")
count = 0
try:
    fh = open(fname)
except:
    print('File cannot be found.')
    quit()
for line in fh:
    line = line.rstrip()
    words = line.split()
    if len(words) < 3:
        continue
    if words[0] != 'From':
        continue
    print(words[2])
    count = count + 1
print('There were',count,'lines in the file with From as the first word')

#Find email addresses and count 
fname = input("Enter file name: ")
count = 0
try:
    fh = open(fname)
except:
    print('File cannot be found.')
    quit()
for line in fh:
    line = line.strip()
    words = line.split()
    if len(words) < 3 or words[0] != 'From':
        continue
    print(words[1])
    count = count + 1
print('There were',count,'lines in the file with From as the first word')
